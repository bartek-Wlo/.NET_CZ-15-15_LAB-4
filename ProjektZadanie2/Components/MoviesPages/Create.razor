@page "/movies/create"
@rendermode InteractiveServer

@using ProjektZadanie2.Data.Models
@using ProjektZadanie2.Data
@using Microsoft.EntityFrameworkCore

@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject NavigationManager Navigation

<h3>Create Movie</h3>

<EditForm Model="@movie" OnValidSubmit="@HandleValidSubmit" FormName="create-movie">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="title" class="form-label">Title:</label>
        <InputText id="title" class="form-control" @bind-Value="movie.Title" />
    </div>
    <div class="mb-3">
        <label for="description" class="form-label">Description:</label>
        <InputText id="description" class="form-control" @bind-Value="movie.Description" />
    </div>
     <div class="mb-3">
        <label for="releaseYear" class="form-label">Release Year:</label>
        <InputNumber TValue="int?" id="releaseYear" class="form-control" @bind-Value="movie.ReleaseYear" />
    </div>
     <div class="mb-3">
        <label for="releaseDate" class="form-label">Release Date:</label>
        <InputDate TValue="DateTime?" id="releaseDate" class="form-control" @bind-Value="movie.ReleaseDate" />
    </div>
     <div class="mb-3">
        <label for="rate" class="form-label">Rate:</label> 
        <InputNumber TValue="double?" id="rate" class="form-control" @bind-Value="movie.Rate" /> 
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
    <a href="/movies" class="btn btn-secondary">Cancel</a>
</EditForm>

@code {
    private Movie movie = new();
    private ApplicationDbContext _dbContext = default!;

    protected override void OnInitialized()
    {
         movie = new Movie();
         movie.IncreaseRateNumbers();
    }

    private async Task HandleValidSubmit(EditContext editContext)
    {
        _dbContext = DbFactory.CreateDbContext(); // Uzyskaj kontekst
        _dbContext.Movies.Add(movie); // Dodaj nowy obiekt do śledzenia przez EF
        await _dbContext.SaveChangesAsync(); // Zapisz zmiany w bazie danych
        await _dbContext.DisposeAsync(); // Zwolnij kontekst
        Navigation.NavigateTo("/movies"); // Przekieruj do listy filmów
    }

    // Ważne: Zwolnij DbContext
     public async void Dispose()
     {
          if (_dbContext != null) await _dbContext.DisposeAsync();
     }
}